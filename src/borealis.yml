# Configuration file for Borealis code

adapter: 
  # tacode, simple_function, or example_externalcode
  kind_adapter: tacode
  

optimizer: 
  # Bayesian_optimization or PSO
  kind_optimizer: PSO


#mpi: 
#  flag_mpi: True


parameter_optimized:

  # Parameter boundaries
  boundary:
    - name: 'initial_settings.coordinate:' #'# Initial coordinate' 
      component:
        - type: coord_longitude
          bound_min: -126.76427528637089
          bound_max: -126.76427528637089
        - type: coord_latitude
          bound_min: 47.59216768160328
          bound_max: 47.59216768160328
        - type: coord_altitude
          bound_min: 211.0925432920908
          bound_max: 211.0925432920908
    - name: 'initial_settings.velocity:' #'# Initial velocity' 
      component:
        - type: velocity_longitude
          bound_min: 6800
          bound_max: 6850
        - type: velocity_latitude
          bound_min: 3070
          bound_max: 3090
        - type: velocity_altitude
          bound_min: 2.0
          bound_max: 2.2
    - name: 'initial_settings.density_factor:' # '# Factor for atmospheric density'
      component:
        - type: density_factor
          bound_min: 0.5
          bound_max: 1.5

  # Penalty
  flag_penalty: True
  penalty_value: 1000.0


Bayesian_optimization:

  # Optimizer settings
  model_type: GP     # GP, GP_MCMC, sparseGP, warperdGP, InputWarpedG, RF
  normalize_Y: False # 目的関数(ガウス過程)を標準化する場合はTrue(予測を真値と比較しやすくするためFalse)
  maximize: False
  acquisition_type: EI # EI, EI_MCMC, MPI, MPI_MCMC, LCB, LCB_MCMC
  acquisition_weight: 2
  acquisition_optimizer_type: lbfgs # lbfgs, DIRECT, CMA
  initial_design_numdata: 5 # 設定する初期データの数、X, Yを指定した場合は設定不要。 
  initial_design_type: random # random, latin
  model_update_interval: 1
  verbosity: True

  num_optiter: 100

  # Results data file (Tecplot data format)
  result_dir: result_bopt
  filename_output: output_bopt.dat

  # Acquisition
  flag_image_acquisition: False
  filename_image_acquisition: acquisition.png

  # Convergence
  flag_image_convergence: False
  filename_image_convergence: convergence.png


PSO:
  # particle swarm optimization

  # Number of iterations
  num_optiter: 100

  # Number of particles
  num_particle: 20

  # Minimize or maximize the objective function
  maximize: False

  # Tolerance of effor of objective function
  tolerance: 1.e-5

  # Particle parameter for PSO
  inertia: 0.5
  cognitive_coef: 1.0
  social_coef: 1.0

  # Results data file (Tecplot data format)
  result_dir: result_PSO
  filename_output: output_PSO.dat
  filename_global: output_global.dat


reference:

  directory_path_specify: manual # default or manual
  manual_path: ../../testcase_template/case_day118.339/output
  filename_input: trajectory.dat

  var_x: time_day
  var_y:
    - longitude
    - latitude
    - altitude

  timeunit: day


tacode:

  # Code system: python3 (tacode ver2.0) or Fortran (tacoed ver1.0)
  code_system: python3

  # tacode case directory
  work_dir: work_tacode
  case_dir: case
  step_digit: 4

  directory_path_specify: manual # default or manual
  manual_path: ../../testcase_template/work_tacode

  # Executing script
  cmd_code: ./run_tacode.sh
  
  # Control file
  filename_control: config.yml
  
  # Result file name computed by Tacode
  filename_result: output_result/tecplot.dat
  
  # Tiem variables (Tacodeではsecondで出力されるのでその変換を行う)
  convert_timeunit_tapost: sec2day

  # 時刻にオフセットを与える（Tacodeでは0secondが計算開始時刻なので、サンプル・最適化結果と比較用するときはこれをつかう）
  # 時刻オフセット値はここで決定する
 # time_start: 118.3385
 # time_end:   118.4003
 # target_time: 118.3385
  time_start: 118.3480
  time_end:   118.3931
  target_time: 118.3480

  # Result trajectory of Tacode 
  result_dir: result_tacode
  flag_output: True
  filename_output: output_result.dat


simple_function:
 
  #flag_eval: False
  #function_eval: '2*np.sin(x) + 4*np.cos(2 * x) + 3*np.cos(2/5 * x)'

  # Function output
  result_dir: result_function
  flag_output: True
  filename_output: output_function.dat
  function_discrete: 100
  function_bound_min: -10
  function_bound_max: 10


example_externalcode:

  # tacode case directory
  work_dir: work_externalcode
  case_dir: case
  step_digit: 4
  
  directory_path_specify: manual # default or manual
  manual_path: ../../testcase_template/work_curve

  # Executing script
  cmd_externalcode: ./run_externalcode.sh
  
  # Control file
  filename_control: curve.yml
  
  # Result file name computed by the external code
  filename_result: output.dat

  # Result trajectory of Tacode 
  result_dir: result_externalode
  flag_output: True
  filename_output: tecplot_output.dat

  # Definition range
  x_min: -10
  x_max:  10
  x_offset: 0


heatcond:

  # tacode case directory
  work_dir: work_heatcond
  case_dir: case
  step_digit: 4

  directory_path_specify: manual # default or manual
  manual_path: ../../testcase_template/work_heatcond/work_heatcond_solar

  # Executing script
  cmd_code: ./run_code.sh
  
  # Control file
  filename_control: heatcond.ctl
  
  # Result file name computed by Tacode
  filename_result: history.dat
  
  # Tiem variables (Tacodeではsecondで出力されるのでその変換を行う)
  #convert_timeunit_tapost: sec2day

  # 時刻にオフセットを与える（Tacodeでは0secondが計算開始時刻なので、サンプル・最適化結果と比較用するときはこれをつかう）
  # 時刻オフセット値はここで決定する
 # time_start: 118.3385
 # time_end:   118.4003
 # target_time: 118.3385
  x_min: 10181685
  x_max: 10186747
  x_offset: 0

  # Result trajectory of Tacode 
  result_dir: result_heatcond
  flag_output: False
  filename_output: output_result.dat
  variables_output: 
    - Time[s]
    - T[K]
#    - Alt.[km]
#    - Dens[kg/m3]
#    - Tback[K]
#    - Tatm[K]
#    - Htcoef
#    - Re
#    - Solar[W/m2]
    - Heatflux[W/m2]


cage:

  # tacode case directory
  work_dir: work_cage
  case_dir: case
  step_digit: 4

  directory_path_specify: manual # default or manual
  manual_path: ../../testcase_template/work_cage/work_solar

  # Executing script
  cmd_code: ./run_code.sh
  
  # Control file
  filename_control: cage.yml
  
  # Result file name computed by Tacode
  filename_result: history.dat
  
  # Tiem variables (Tacodeではsecondで出力されるのでその変換を行う)
  #convert_timeunit_tapost: sec2day

  # 時刻にオフセットを与える
  # 時刻オフセット値はここで決定する
 # time_start: 118.3385
 # time_end:   118.4003
 # target_time: 118.3385
  x_min: 10181685
  x_max: 10186747
  x_offset: 0

  # Result file of Cage
  result_dir: result_cage
  flag_output: False
  filename_output: result/probe_brightness_ave.dat
  variables_output: 
    - TC1