# Configuration file for Borealis code

adapter: 
  # tacode or simple_function
  kind_adapter: simple_function  


optimizer: 
  # Bayesian_optimization or PSO
  kind_optimizer: PSO


parameter_optimized:
  # Parameter boundaries
  boundary:
    - name: 'simple_function'
      component:
        - type: x
          bound_min: -10
          bound_max:  10

Bayesian_optimization:

  # Optimizer settings
  model_type: GP     # GP, GP_MCMC, sparseGP, warperdGP, InputWarpedG, RF
  normalize_Y: False # 目的関数(ガウス過程)を標準化する場合はTrue(予測を真値と比較しやすくするためFalse)
  maximize: False
  acquisition_type: EI # EI, EI_MCMC, MPI, MPI_MCMC, LCB, LCB_MCMC
  acquisition_weight: 2
  acquisition_optimizer_type: lbfgs # lbfgs, DIRECT, CMA
  initial_design_numdata: 5 # 設定する初期データの数、X, Yを指定した場合は設定不要。 
  initial_design_type: random # random, latin
  model_update_interval: 1
  verbosity: True

  num_optiter: 25

  # Results data file (Tecplot data format)
  result_dir: result_bopt
  filename_output: output_bopt.dat

  # Acquisition
  flag_image_acquisition: True
  filename_image_acquisition: acquisition.png

  # Convergence
  flag_image_convergence: True
  filename_image_convergence: convergence.png


PSO:
  # particle swarm optimization

  # Number of iterations
  num_optiter: 100

  # Number of particles
  num_particle: 20

  # Minimize or maximize the objective function
  maximize: False

  # Tolerance of effor of objective function
  tolerance: 1.e-20

  # Particle parameter for PSO
  inertia: 0.5
  cognitive_coef: 1.0
  social_coef: 1.0

  # Results data file (Tecplot data format)
  result_dir: result_PSO
  filename_output: output_PSO.dat

reference:


simple_function:
 
  #flag_eval: False
  #function_eval: '2*np.sin(x) + 4*np.cos(2 * x) + 3*np.cos(2/5 * x)'

  # Function output
  result_dir: result_function
  flag_output: True
  filename_output: output_function.dat
  function_discrete: 100
  function_bound_min: -10
  function_bound_max: 10